
package estruturas.com.View;

import estruturas.com.ListaEncadeada.ListaEncadeada;
import estruturas.com.PilhaLista.PilhaLista;
import estruturas.com.PilhaLista.PilhaVetor;
import estruturas.trabalho.Calculadora;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel Borba Varela dos Santos e Bruno Henrique de Borba
 */
public class Principal extends javax.swing.JFrame {
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_expressao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        bt_calcular = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tf_result = new javax.swing.JTextField();
        bt_pilhaVetor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora");

        jLabel1.setText("Express√£o");

        bt_calcular.setText("Pilha Lista");
        bt_calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_calcularActionPerformed(evt);
            }
        });

        jLabel2.setText("Result");

        tf_result.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_resultActionPerformed(evt);
            }
        });

        bt_pilhaVetor.setText("Pilha Vetor");
        bt_pilhaVetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_pilhaVetorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(tf_expressao, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf_result))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bt_calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_pilhaVetor, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_expressao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_calcular)
                    .addComponent(bt_pilhaVetor))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_calcularActionPerformed
        Calculadora c = new Calculadora();
        ListaEncadeada<String> termosInfixada = c.extrairTermos(tf_expressao.getText());
        ListaEncadeada<String> termosPosfixada = c.gerarExprPosfixadaPl(termosInfixada);
        PilhaLista<String> tipo_pilha = new PilhaLista();
        PilhaLista<String> finalPilhaLista = null;
        try {
            finalPilhaLista = (PilhaLista)c.exibir(termosPosfixada, tipo_pilha);
            tipo_pilha = new PilhaLista();
            tf_result.setText(String.valueOf(c.calcular(finalPilhaLista, tipo_pilha))); 
        } catch (Exception ex) {
        }
        
    }//GEN-LAST:event_bt_calcularActionPerformed

    private void tf_resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_resultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_resultActionPerformed

    private void bt_pilhaVetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_pilhaVetorActionPerformed
  
        Calculadora c = new Calculadora();
        ListaEncadeada<String> termosInfixada = c.extrairTermos(tf_expressao.getText());
        ListaEncadeada<String> termosPosfixada = c.gerarExprPosfixadaPl(termosInfixada);
        int qtd = termosPosfixada.obterComprimento();
        PilhaVetor<String> tipo_pilha = new PilhaVetor(qtd);
        PilhaVetor<String> finalPilhaVetor = null;
        try {
            finalPilhaVetor = (PilhaVetor)c.exibir(termosPosfixada, tipo_pilha);
            tipo_pilha = new PilhaVetor(qtd);
            tf_result.setText(String.valueOf(c.calcular(finalPilhaVetor, tipo_pilha))); 
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_bt_pilhaVetorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_calcular;
    private javax.swing.JButton bt_pilhaVetor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tf_expressao;
    private javax.swing.JTextField tf_result;
    // End of variables declaration//GEN-END:variables
}
